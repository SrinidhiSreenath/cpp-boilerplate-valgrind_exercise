Command -> valgrind ./app/shell-app

==928== Memcheck, a memory error detector
==928== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==928== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==928== Command: ./app/shell-app
==928== 
Averaged sensor reading: 10
DONE
==928== 
==928== HEAP SUMMARY:
==928==     in use at exit: 72,704 bytes in 1 blocks
==928==   total heap usage: 7 allocs, 6 frees, 74,999 bytes allocated
==928== 
==928== LEAK SUMMARY:
==928==    definitely lost: 0 bytes in 0 blocks
==928==    indirectly lost: 0 bytes in 0 blocks
==928==      possibly lost: 0 bytes in 0 blocks
==928==    still reachable: 72,704 bytes in 1 blocks
==928==         suppressed: 0 bytes in 0 blocks
==928== Rerun with --leak-check=full to see details of leaked memory
==928== 
==928== For counts of detected and suppressed errors, rerun with: -v
==928== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Command -> valgrind --tool=helgrind ./app/shell-app

==981== Helgrind, a thread error detector
==981== Copyright (C) 2007-2015, and GNU GPL'd, by OpenWorks LLP et al.
==981== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==981== Command: ./app/shell-app
==981== 
Averaged sensor reading: 10
DONE
==981== 
==981== For counts of detected and suppressed errors, rerun with: -v
==981== Use --history-level=approx or =none to gain increased speed, at
==981== the cost of reduced accuracy of conflicting-access information
==981== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Command -> valgrind --leak-check=full ./app/shell-app

==1044== Memcheck, a memory error detector
==1044== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1044== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1044== Command: ./app/shell-app
==1044== 
Averaged sensor reading: 10
DONE
==1044== 
==1044== HEAP SUMMARY:
==1044==     in use at exit: 72,704 bytes in 1 blocks
==1044==   total heap usage: 7 allocs, 6 frees, 74,999 bytes allocated
==1044== 
==1044== LEAK SUMMARY:
==1044==    definitely lost: 0 bytes in 0 blocks
==1044==    indirectly lost: 0 bytes in 0 blocks
==1044==      possibly lost: 0 bytes in 0 blocks
==1044==    still reachable: 72,704 bytes in 1 blocks
==1044==         suppressed: 0 bytes in 0 blocks
==1044== Reachable blocks (those to which a pointer was found) are not shown.
==1044== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==1044== 
==1044== For counts of detected and suppressed errors, rerun with: -v
==1044== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Command -> valgrind --leak-check=full --show-leak-kinds=all ./app/shell-app

==1055== Memcheck, a memory error detector
==1055== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1055== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1055== Command: ./app/shell-app
==1055== 
Averaged sensor reading: 10
DONE
==1055== 
==1055== HEAP SUMMARY:
==1055==     in use at exit: 72,704 bytes in 1 blocks
==1055==   total heap usage: 7 allocs, 6 frees, 74,999 bytes allocated
==1055== 
==1055== 72,704 bytes in 1 blocks are still reachable in loss record 1 of 1
==1055==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1055==    by 0x4EC3EFF: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==1055==    by 0x40106B9: call_init.part.0 (dl-init.c:72)
==1055==    by 0x40107CA: call_init (dl-init.c:30)
==1055==    by 0x40107CA: _dl_init (dl-init.c:120)
==1055==    by 0x4000C69: ??? (in /lib/x86_64-linux-gnu/ld-2.23.so)
==1055== 
==1055== LEAK SUMMARY:
==1055==    definitely lost: 0 bytes in 0 blocks
==1055==    indirectly lost: 0 bytes in 0 blocks
==1055==      possibly lost: 0 bytes in 0 blocks
==1055==    still reachable: 72,704 bytes in 1 blocks
==1055==         suppressed: 0 bytes in 0 blocks
==1055== 
==1055== For counts of detected and suppressed errors, rerun with: -v
==1055== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


Command -> valgrind --tool=callgrind ./app/shell-app

==1069== Callgrind, a call-graph generating cache profiler
==1069== Copyright (C) 2002-2015, and GNU GPL'd, by Josef Weidendorfer et al.
==1069== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1069== Command: ./app/shell-app
==1069== 
==1069== For interactive control, run 'callgrind_control -h'.
Averaged sensor reading: 10
DONE
==1069== 
==1069== Events    : Ir
==1069== Collected : 2375278
==1069== 
==1069== I   refs:      2,375,278

 

